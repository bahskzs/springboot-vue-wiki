<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yqy.wiki.mapper.EbookSnapshotMapperCustom">

    <update id="genEbookSnapshot">
                -- 写入快照表，如果当天的对应的电子书记录不存在就可以插入一条新纪录
        insert into ebook_snapshot(ebook_id, date, view_count, vote_count, view_increase, vote_increase)
        select t1.id, curdate(), 0, 0, 0, 0
        from ebook t1
        where not exists(select 1
                         from ebook_snapshot t2
                         where t1.id = t2.ebook_id
                           and t2.`date` = curdate());



        -- 更新view_count和vote_count两个记录 --
        update ebook_snapshot t1 join ebook t2 on t1.ebook_id = t2.id
        set t1.vote_count = t2.vote_count,
            t1.view_count = t2.view_count
        where t1.`date` = curdate();


        -- 更新今日阅读数,今日点赞数
        update ebook_snapshot t1 left join ebook_snapshot t2 on t1.ebook_id = t2.ebook_id
        and t2.`date`=date_sub(curdate(), interval 1 day)
        set t1.view_increase = t1.view_count - t2.view_count,
            t1.vote_increase = t1.vote_count-t2.vote_count
        where t1.`date`= curdate();

        -- 需要注意新增书籍，当天的点赞数，阅读数就是本日对应的增长
        update ebook_snapshot t1 left join ebook_snapshot t2 on t1.ebook_id = t2.ebook_id
            and t2.`date` = date_sub(curdate(), interval 1 day)
        set t1.vote_increase = IFNULL(t1.vote_count-t2.vote_count,t1.vote_count),
            t1.view_increase = IFNULL(t1.view_count - t2.view_count,t1.view_count)
        where t1.`date`= curdate();
    </update>

    <select id="getStatistic" resultType="com.yqy.wiki.resp.EbookStatisticResp">
        select
            t1.`date` as `date`,
            sum(t1.view_count) as viewCount,
            sum(t1.vote_count) as voteCount,
            sum(t1.view_increase) as viewIncrease,
            sum(t1.vote_increase) as voteIncrease
        from
            ebook_snapshot t1
        where
            t1.`date` >= date_sub(curdate(), interval 1 day)
        group by
            t1.`date`
        order by
            t1.`date` asc;
    </select>
    <select id="get30Statistic" resultType="com.yqy.wiki.resp.EbookStatisticResp">
        select
            t1.`date` as `date`,
            sum(t1.view_increase+1) as viewIncrease,
            sum(t1.vote_increase+1) as voteIncrease
        from
            ebook_snapshot t1
        where
            t1.`date` between date_sub(curdate(), interval 30 day) and date_sub(curdate(), interval 1 day)
        group by
            t1.`date`
        order by
            t1.`date` asc;
    </select>


</mapper>
